service: api-tts
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: python3.9
  environment:
    BUCKET_NAME: ${env:BUCKET_NAME}
    TBL_NAME: ${env:TBL_NAME}

functions:
  health:
    handler: handler.health
    events:
      - httpApi:
          path: /
          method: get
  v1Description:
    handler: handler.v1_description
    events:
      - httpApi:
          path: /v1
          method: get
  v2Description:
    handler: handler.v2_description
    events:
      - httpApi:
          path: /v2
          method: get
  v1Rota:
    handler: handler.v3_description
    events:
      - httpApi:
          path: /v1/tts
          method: post
  v2Rota:
    handler: handler.v4_description
    events:
      - httpApi:
          path: /v2/tts
          method: post
  v3Rota:
    handler: handler.v5_description
    events:
      - httpApi:
          path: /v3/tts
          method: post

resources:
  Resources:
    AudiosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TBL_NAME}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    AudioBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
